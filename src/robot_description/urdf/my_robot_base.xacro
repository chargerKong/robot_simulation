<?xml version="1.0"?>
<robot name="my_bot_base" xmlns:xacro="http://www.ros.org/wiki/xacro">

    <xacro:property name="PI" value="3.1415926"/>
    <xacro:property name="base_mass"   value="20" />  
    <xacro:property name="base_radius" value="0.20"/>
    <xacro:property name="base_length" value="0.1"/>

    <xacro:property name="wheel_mass"   value="2" />
    <xacro:property name="wheel_radius" value="0.06"/>
    <xacro:property name="wheel_length" value="0.025"/>
    <xacro:property name="wheel_joint_y" value="0.19"/>
    <xacro:property name="wheel_joint_z" value="0.05"/>

    <xacro:property name="caster_mass"    value="0.5" /> 
    <xacro:property name="caster_radius"  value="0.015"/> <!-- wheel_radius - ( base_length/2 - wheel_joint_z) -->
    <xacro:property name="caster_joint_x" value="0.18"/>
    
   
    <xacro:macro name="cylinder_inertial_matrix" params="m r h">
        <inertial>
            <mass value="${m}" />
            <inertia ixx="${m*(3*r*r+h*h)/12}" ixy = "0" ixz = "0"
                iyy="${m*(3*r*r+h*h)/12}" iyz = "0"
                izz="${m*r*r/2}" /> 
        </inertial>
    </xacro:macro>
    
    <xacro:macro name="wheel" params="prefix reflect">
        <joint name="${prefix}_wheel_joint" type="continuous">
            <!-- <origin xyz="0 ${reflect*wheel_joint_y} ${wheel_radius}" rpy="${PI/2} 0 0" /> -->
            <origin xyz="0 ${reflect*wheel_joint_y} ${wheel_radius}" rpy="0 0 0" />
            <parent link="base_link"/>
            <child link="${prefix}_wheel_link"/>
            <axis xyz="0 1 0"/>
        </joint>

        <link name="${prefix}_wheel_link">
            <visual>
                <origin xyz="0 0 0" rpy="${PI/2} 0 0" />
                <geometry>
                    <cylinder radius="${wheel_radius}" length = "${wheel_length}"/>
                </geometry>
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="${PI/2} 0 0" />
                <geometry>
                    <cylinder radius="${wheel_radius}" length = "${wheel_length}"/>
                </geometry>
            </collision>
            <xacro:cylinder_inertial_matrix  m="${wheel_mass}" r="${wheel_radius}" h="${wheel_length}" />
                     
        </link>
    
    <gazebo reference="${prefix}_wheel_link">
		<material>Gazebo/DarkGrey</material>
	</gazebo>
        
    <transmission name="${prefix}_wheel_joint_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="${prefix}_wheel_joint" >
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        </joint>
        <actuator name="${prefix}_wheel_joint_motor">
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>

   </xacro:macro>
   
    <xacro:macro name="sphere_inertial_matrix" params="m r">
        <inertial>
            <mass value="${m}" />
            <inertia ixx="${2*m*r*r/5}" ixy="0" ixz="0"
                iyy="${2*m*r*r/5}" iyz="0" 
                izz="${2*m*r*r/5}" />
        </inertial>
    </xacro:macro>


    <xacro:macro name="caster" params="prefix reflect">
        <joint name="${prefix}_caster_joint" type="continuous">
            <origin xyz="${reflect*caster_joint_x} 0 ${caster_radius}" rpy="0 0 0"/>
            <parent link="base_link"/>
            <child link="${prefix}_caster_link"/>
            <axis xyz="0 1 0"/>
        </joint>

        <link name="${prefix}_caster_link">
            <visual>
                <geometry>
                    <sphere radius="${caster_radius}" />
                </geometry>
            </visual>
            <collision>
                <geometry>
                    <sphere radius="${caster_radius}" />
                </geometry>
            </collision>      
            <xacro:sphere_inertial_matrix  m="${caster_mass}" r="${caster_radius}" />
        </link>

    </xacro:macro>

   
    <xacro:macro name="my_robot_base">
        <link name="base_footprint">
            <visual>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry>
                    <box size="0.01 0.01 0.01" />
                </geometry>
            </visual>
        </link>
        <gazebo reference="base_footprint">
            <turnGravityOff>false</turnGravityOff>
        </gazebo>

        <joint name="base_footprint_joint" type="fixed">
            <origin xyz="0 0 0" rpy="0 0 0" />
            <parent link="base_footprint"/>
            <child link="base_link" />
        </joint>

        <link name="base_link">
            <visual>
            <origin xyz=" 0 0 ${base_length/2+wheel_radius/3}" rpy="0 0 0" />
                <geometry>
                    <cylinder length="${base_length}" radius="${base_radius}"/>
                    <!-- <mesh uri="model://create/meshes/create_body.dae" /> -->
                    <!-- <mesh filename="model://create/meshes/create_body.dae" /> -->
                    <!-- <mesh filename="model://robot_description/meshes/hok.dae" /> -->
                    
                </geometry>
            </visual>
            <collision>
            <origin xyz=" 0 0 ${base_length/2+wheel_radius/3}" rpy="0 0 0" />
                <geometry>
                    <cylinder length="${base_length}" radius="${base_radius}"/>
                </geometry>
            </collision>   
            <xacro:cylinder_inertial_matrix  m="${base_mass}" r="${base_radius}" h="${base_length}" />
        </link>
            <gazebo reference="base_link">
                <material>Gazebo/Orange</material>
            </gazebo>
        <xacro:wheel prefix="left" reflect="1"/>
        <xacro:wheel prefix="right" reflect="-1"/>

        <xacro:caster prefix="front" reflect="-1"/>
        <xacro:caster prefix="back"  reflect="1"/>


        <gazebo>
            <plugin name="differential_drive_controller" 
                    filename="libgazebo_ros_diff_drive.so">
                <ros>
                    <!-- Set namespace -->
                    <namespace>/</namespace>
                    <!-- Remap default topics -->
                    <argument>--ros-args --remap cmd_vel:=cmd_vel</argument>
                    <argument>--ros-args --remap odom:=odom</argument>
                    <update_rate>10.0</update_rate>
                </ros>
                <left_joint>left_wheel_joint</left_joint>
                <right_joint>right_wheel_joint</right_joint>
                
                <update_rate>10.0</update_rate>
                <!-- 表示两个驱动轮的距离, 单位为米 -->
                <wheel_separation>${wheel_joint_y*2}</wheel_separation>
                <!-- 表示轮子的直径, 单位为米 -->
                <wheel_diameter>${2*wheel_radius}</wheel_diameter>
                <!-- 最大的转矩 -->
                <max_wheel_torque>30</max_wheel_torque>
                <max_wheel_acceleration>1.8</max_wheel_acceleration>
                
                <odometry_frame>odom</odometry_frame>
                <publish_odom>true</publish_odom>
                <publish_odom_tf>true</publish_odom_tf>
                <robot_base_frame>base_footprint</robot_base_frame>
            </plugin>

            <plugin name="gazebo_ros_joint_state_publisher"
              filename="libgazebo_ros_joint_state_publisher.so">
                <ros>
                  <namespace>/</namespace>
                  <argument>--ros-args --remap joint_states:=joint_states</argument>
                </ros>
                <update_rate>10</update_rate>
                <joint_name>left_wheel_joint</joint_name>
                <joint_name>right_wheel_joint</joint_name>
                <joint_name>front_caster_joint</joint_name>
                <joint_name>back_caster_joint</joint_name>
            </plugin>
        </gazebo>
    </xacro:macro>
</robot>
